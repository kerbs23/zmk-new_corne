#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
        };
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

	to_0: to_0 {
		compatible = "zmk,behavior-to-layer";
		#binding-cells = <0>;
		to-layer = <0>;
	};
	unlock_combo: behavior_unlock_combo {
        compatible = "zmk,behavior-hold-tap";
        flavor = "hold-preferred";
        tapping-term-ms = <5000>; // 5-second hold
        bindings = <&to_0>, <&none>; // Hold: unlock (disable lock layer), Tap: nothing
    };




    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };
	};


    keymap {
        compatible = "zmk,keymap";


        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp DEL           &kp Q         &kp W        &kp E        &kp R        &kp T       &none               &kp Y        &kp U        &kp I        &kp O         &kp P            &kp BSPC
&kp BSPC          &hml LCTRL A  &hml LSFT S  &hml LGUI D  &hml LALT F  &kp G       &none &kp A &kp A   &kp H        &hmr RALT J  &hmr LGUI K  &hmr RSFT L   &hmr RCTRL SEMI  &kp SQT
&mt LSHFT RETURN  &kp Z         &kp X        &kp C        &kp V        &kp B       &none &kp A         &kp N        &kp M        &kp COMMA    &kp DOT       &kp FSLH         &caps_word
                             &lt 1 TAB    &lt 3 SPACE    &lt 2 ESC                                           &lt 2 ESC    &lt 3 SPACE    &lt 1 TAB
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp DEL  &kp N1          &kp N2         &kp N3         &kp N4          &kp N5    &none              &kp N6    &kp N7       &kp N8       &kp N9       &kp N0           &kp BSPC
&kp BSPC &hml LCTRL LBKT &hml LSFT RBKT &hml LGUI BSLH &hml LALT MINUS &kp EQUAL &none &kp A &kp A  &kp GRAVE &hmr RALT J  &hmr LGUI K  &hmr RSFT L  &hmr RCTRL SEMI  &kp SQT
&kp F1   &kp F2          &kp F3         &kp F4         &kp F5          &kp F6    &none &kp A        &kp F7    &kp F8       &kp F9       &kp F10      &kp F11          &kp F12
                             &lt 1 TAB    &lt 4 SPACE    &lt 2 ESC                          &lt 2 ESC    &lt 4 SPACE    &lt 1 TAB
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp DEL        &kp N1          &kp N2       &kp N3       &kp N4       &kp N5       &none              &kp N6          &kp N7    &kp N8     &kp N9       &kp N0        &kp BSPC
&kp BSPC       &hml LCTRL A    &hml LSFT S  &hml LGUI D  &hml LALT F  &kp G        &none &kp A &kp A  &kp LEFT        &kp DOWN  &kp UP     &kp RIGHT    &kp HOME      &kp END
&rgb_ug RGB_ON &rgb_ug RGB_OFF &kp C_VOL_UP &kp C_VOL_DN &kp C_BRI_UP &kp C_BRI_DN &none &kp A        &to 6           &kp PG_DN &kp PG_UP  &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2
                                            &lt 1 TAB    &lt 5 SPACE    &lt 2 ESC                       &lt 2 ESC &lt 5 SPACE &lt 1 TAB
            >;
            sensor-bindings = <&scroll_encoder>;
        };




        mirror_default_layer {
            display-name = "DEFAULT_MIRROR";
            bindings = <
&kp BSPC      &kp P           &kp O       &kp I       &kp U        &kp Y       &none               &kp T        &kp R        &kp E        &kp W         &kp Q         &kp DEL
&kp SQT       &hmr RCTRL SEMI &hmr RSFT L &hmr LGUI K &hmr RALT J  &kp H       &none &kp A &kp A   &kp G        &hml LALT F  &hml LGUI D  &hml LSFT S   &hml LCTRL A  &kp BSPC
&caps_word    &kp FSLH        &kp DOT     &kp COMMA   &kp M        &kp N       &none &kp A         &kp B        &kp V        &kp C        &kp X         &kp Z         &mt LSHFT RETURN
                             &lt 5 TAB    &lt 3 SPACE    &lt 4 ESC                                           &lt 4 ESC    &lt 3 SPACE    &lt 5 TAB
    >;
			sensor-bindings = <&scroll_encoder>;
	};


        mirror_lower_layer {
            display-name = "NUMBER_MIRROR";
            bindings = <
&kp BSPC  &kp N0          &kp N9       &kp N8       &kp N7       &kp N6    &none              &kp N5      &kp N4      &kp N3      &kp N2      &kp N1      &kp DEL
&kp SQT   &hmr RCTRL SEMI &hmr RSFT L  &hmr LGUI K  &hmr RALT J  &kp GRAVE &none &kp A &kp A  &kp EQUAL   &hml LALT MINUS &hml LGUI BSLH &hml LSFT RBKT &hml LCTRL LBKT &kp BSPC
&kp F12   &kp F11         &kp F10      &kp F9       &kp F8       &kp F7    &none &kp A        &kp F6      &kp F5      &kp F4      &kp F3      &kp F2       &kp F1
                             &lt 4 TAB    &lt 5 SPACE    &lt 5 ESC                          &lt 5 ESC    &lt 4 SPACE    &lt 4 TAB
    >;
			sensor-bindings = <&scroll_encoder>;
	};


        mirror_raise_layer {
            display-name = "SYMBOL_MIRROR";
            bindings =<
&kp BSPC       &kp N0        &kp N9       &kp N8       &kp N7       &kp N6       &none              &kp N5       &kp N4       &kp N3       &kp N2       &kp N1        &kp DEL
&kp END        &kp HOME      &kp RIGHT    &kp UP       &kp DOWN     &kp LEFT     &none &kp A &kp A  &kp G        &hml LALT F  &hml LGUI D  &hml LSFT S  &hml LCTRL A  &kp BSPC
&bt BT_SEL 2   &bt BT_SEL 1  &bt BT_SEL 0 &kp PG_UP    &kp PG_DN    &trans       &none &kp A        &kp C_BRI_DN &kp C_BRI_UP &kp C_VOL_DN &kp C_VOL_UP &rgb_ug RGB_OFF &rgb_ug RGB_ON
                                            &lt 4 TAB    &lt 5 SPACE    &lt 5 ESC                       &lt 5 ESC    &lt 5 SPACE    &lt 4 TAB
    >;
			sensor-bindings = <&scroll_encoder>;
	};


 
		sleep_layer {
            display-name = "PAUSE_FOR_TRAVEL";
            bindings =<
&none  &none  &none  &none  &none  &none      &none                 &none  &none  &none  &none  &none  &none  
&none  &none  &none  &none  &none  &none      &none  &none  &none   &none  &none  &none  &none  &none  &none  
&none  &none  &none  &none  &none  &unlock_combo      &none  &none          &unlock_combo  &none  &none  &none  &none  &none  
&none  &none  &none             &none  &none  &none  
    >;
			sensor-bindings = <&scroll_encoder>;
	};

};
};
